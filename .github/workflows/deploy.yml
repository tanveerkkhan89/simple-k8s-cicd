name: Deploy Python App to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check required secrets
      run: |
        test -n "${{ secrets.DOCKER_USERNAME }}" || (echo "Missing DOCKER_USERNAME" && exit 1)
        test -n "${{ secrets.DOCKER_PASSWORD }}" || (echo "Missing DOCKER_PASSWORD" && exit 1)
        test -n "${{ secrets.KUBECONFIG_B64 }}" || (echo "Missing KUBECONFIG_B64" && exit 1)

    - name: Set up environment
      run: echo "PATH=$PATH:$HOME/bin" >> $GITHUB_ENV

    - name: Set up Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config
        kubectl version --client

    - name: Build Docker image using nerdctl
      run: |
        sudo nerdctl build -t tanvi-python-app:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | sudo nerdctl login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Tag Docker image
      run: sudo nerdctl tag tanvi-python-app:latest ${{ secrets.DOCKER_USERNAME }}/tanvi-web:latest

    - name: Push Docker image
      run: sudo nerdctl push ${{ secrets.DOCKER_USERNAME }}/tanvi-web:latest

    - name: Deploy to Kubernetes
      run: |
        export KUBECONFIG=$HOME/.kube/config
        kubectl apply -f manifest/

    - name: Verify Deployment
      run: |
        export KUBECONFIG=$HOME/.kube/config
        kubectl rollout status deployment/tanvi-python-app-deployment
